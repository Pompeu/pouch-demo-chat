function run(t,a){t.ready(function(){a.cordova&&a.cordova.plugins&&a.cordova.plugins.Keyboard&&(cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),cordova.plugins.Keyboard.disableScroll(!0)),a.StatusBar&&StatusBar.styleDefault()})}function config(t,a){t.state("tab",{url:"/tab","abstract":!0,templateUrl:"templates/tabs.html"}).state("tab.dash",{url:"/dash",views:{"tab-dash":{templateUrl:"templates/tab-dash.html",controller:"DashCtrl",controllerAs:"vm"}}}).state("tab.chats",{url:"/chats",views:{"tab-chats":{templateUrl:"templates/tab-chats.html",controller:"ChatsCtrl"}}}).state("tab.chat-detail",{url:"/chats/:chatId",views:{"tab-chats":{templateUrl:"templates/chat-detail.html",controller:"ChatDetailCtrl"}}}).state("tab.account",{url:"/account",views:{"tab-account":{templateUrl:"templates/tab-account.html",controller:"AccountCtrl"}}}),a.otherwise("/tab/dash")}angular.module("starter",["ionic","starter.controllers","starter.services","starter.run"]).run(run).config(config),run.$inject=["$ionicPlatform","$window"],config.$inject=["$stateProvider","$urlRouterProvider"];
angular.module("starter.controllers",[]).controller("DashCtrl",["Chats","$state","$window",function(e,t,n){var o=this;o.join=function(t){if(t&&t.length<4)return o.message="use 5 or more carater for name";var s={_id:(new Date).toISOString(),name:o.name,face:"img/default.png"};e.add(s).then(function(){n.localStorage.setItem("user",JSON.stringify(s)),o.go()})["catch"](function(e){alert(e)}),o.message=""},o.go=function(){t.go("tab.chats")}}]).controller("ChatsCtrl",["$scope","Chats","$window",function(e,t,n){var o=JSON.parse(n.localStorage.getItem("user"));e.$on("$ionicView.enter",function(){t.all().then(function(t){e.chats=t.rows.filter(function(e){return e.id!==o._id}).map(function(e){return e.doc}),e.$digest()})}),e.remove=function(e){t.remove(e)}}]).controller("ChatDetailCtrl",["$scope","$stateParams","Chats","$rootScope",function(e,t,n,o){e.messages=[],e.user=(new Date).toISOString(),e.other=t.chatId,e.$on("$ionicView.enter",function(){n.get(t.chatId).then(function(t){e.chat=t,e.$digest()})}),e.conversations={_id:[e.user,e.other].join().replace(",","-"),messages:[],timeistamp:(new Date).toISOString()},e.sendMessage=function(t,n){"string"==typeof t?(n=t,e.conversations.messages.push(n)):13===t.which&&e.conversations.messages.push(n),e.message=""}}]).controller("AccountCtrl",["$scope",function(e){e.settings={enableFriends:!0}}]);
!function(){"use strict";angular.module("pouchdb",[])}();
!function(){"use strict";function t(t){var n,e;this.setDataBaseName=function(t){return n=new PouchDB(t)},this.startListening=function(){e=n.changes({live:!0,include_docs:!0}).on("change",function(n){t.$broadcast("$change",n)})},this.stopListening=function(){e.stop()},this.save=function(t){return t.hasOwnProperty("id")?n.put(t):n.post(t)},this.get=function(t){return n.get(t)},this.remove=function(t,e){return n.remove(t,e)},this.getAll=function(){return n.allDocs({include_docs:!0})}}angular.module("pouchdb").service("$pouchdb",t),t.$inject=["$rootScope"]}();
!function(){"use strict";angular.module("starter.run",["pouchdb"]).run(["$pouchdb",function(u){u.setDataBaseName("users")}])}();
angular.module("starter.services",["pouchdb"]).factory("Chats",["$pouchdb",function(t){return{all:function(){return t.getAll()},get:function(n){return t.get(n)},add:function(n){return t.save(n)}}}]);